// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  code           Int              @id @default(autoincrement())
  userId         String           @unique
  userName       String
  userPassword   String
  userType       String
  userAgree      Boolean
  createdAt      DateTime         @default(now())
  Mapping        Mapping[]
  MappingComment MappingComment[]
  WorkoutLog     WorkoutLog[]
}

model Mapping {
  code                Int                 @id @default(autoincrement())
  userCode            Int
  User                User                @relation(fields: [userCode], references: [code])
  timeStamp           String              @unique
  mappingType         String
  mappingName         String
  mappingTel          String
  mappingBusinessHour String
  mappingLatitude     String              @unique
  mappingLongitude    String              @unique
  mappingMuscleUp     Int
  mappingMuscleDown   Int
  createdAt           DateTime            @default(now())
  MappingRestaurant   MappingRestaurant[]
  MappingGym          MappingGym[]
  MappingComment      MappingComment[]
  MappingFile         MappingFile[]
}

model MappingRestaurant {
  code                Int      @id @default(autoincrement())
  mappingCode         Int      @unique
  Mapping             Mapping  @relation(fields: [mappingCode], references: [code])
  restaurantMenu      String
  restaurantNutrition String
  restaurantTip       String
  createdAt           DateTime @default(now())
}

model MappingGym {
  code        Int      @id @default(autoincrement())
  mappingCode Int      @unique
  Mapping     Mapping  @relation(fields: [mappingCode], references: [code])
  gymFacility String
  gymMood     String
  gymGood     String
  gymBad      String
  createdAt   DateTime @default(now())
}

model MappingComment {
  code           Int      @id @default(autoincrement())
  userCode       Int
  User           User     @relation(fields: [userCode], references: [code])
  mappingCode    Int      @unique
  Mapping        Mapping  @relation(fields: [mappingCode], references: [code])
  commentContent String
  createdAt      DateTime @default(now())
}

model MappingFile {
  code      Int      @id @default(autoincrement())
  timeStamp String
  Mapping   Mapping  @relation(fields: [timeStamp], references: [timeStamp])
  imgSrc    String
  imgName   String
  imgType   String
  createdAt DateTime @default(now())
}

model WorkoutLog {
  code        Int           @id @default(autoincrement())
  userCode    Int
  User        User          @relation(fields: [userCode], references: [code])
  createdAt   DateTime      @default(now())
  WorkoutType WorkoutType[]
}

model WorkoutType {
  code               Int                  @id @default(autoincrement())
  workoutLogCode     Int
  WorkoutLog         WorkoutLog           @relation(fields: [workoutLogCode], references: [code])
  workoutName        String
  workoutComment     String
  createdAt          DateTime             @default(now())
  WorkoutPerformance WorkoutPerformance[]
}

model WorkoutPerformance {
  code            Int         @id @default(autoincrement())
  workoutTypeCode Int
  WorkoutType     WorkoutType @relation(fields: [workoutTypeCode], references: [code])
  workoutSet      Int
  workoutCount    Int
  workoutWeight   Int
  createdAt       DateTime    @default(now())
}
